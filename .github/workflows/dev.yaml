name: Terraform Deployment

on:
  push:
    branches:
      - terramate-test
 
jobs:
  deploy:
    name: Deploy Terraform changes in changed Terramate stacks

    permissions:
      id-token: write
      contents: read

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Install tooling

      - name: Install Terramate
        uses: terramate-io/terramate-action@v1
        with:
          version: "0.9.0-rc1"
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.4
          terraform_wrapper: false

      # Check for changed stacks

      - name: List changed stacks
        id: list
        run: terramate list --changed

      - name: Run Terraform init on changed stacks
        if: steps.list.outputs.stdout
        run: terramate run --changed -- terraform init

      - name: Create Terraform plan on changed stacks
        if: steps.list.outputs.stdout
        run: terramate run terraform plan       
# name: Terraform Deployment

# on:
#   push:
#     branches:
#       - terramate-test
 
# jobs:
#   terramate-plan:
#     name: Terramate Plan
#     permissions:
#       id-token: write
#       contents: read

#     runs-on: ubuntu-latest
#     container: 
#       image: public.ecr.aws/o0i6i2m0/tf-actions:latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Initialize Git repository
#         run: git init
  
#       - name: List changed stacks
#         id: list
#         run: terramate list --changed

#       - name: Run Terraform init on changed stacks
#         if: steps.list.outputs.stdout
#         run: terramate run --changed -- terraform init

#       - name: Create Terraform plan on changed stacks
#         if: steps.list.outputs.stdout
#         run: terramate run terraform plan

  # terramate-apply:
  #   name: Terramate Apply
  #   runs-on: ubuntu-latest
  #   container: 
  #     image: public.ecr.aws/o0i6i2m0/tf-actions:latest
  #   environment: terrraform_apply
  #   steps: 
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0

  #     - name: List changed stacks
  #       id: list
  #       run: terramate list 

  #     - name: Run Terraform init on changed stacks
  #       if: steps.list.outputs.stdout
  #       run: terramate run terraform init

  #     - name: Apply planned changes on changed stacks
  #       if: steps.list.outputs.stdout
  #       run: terramate run terraform apply out.tfplan
  #       env:
  #         GITHUB_TOKEN: ${{ github.token }}

